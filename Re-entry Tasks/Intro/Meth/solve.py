from math import isqrt
from Crypto.Util.number import *

ct = "5b9feedf48150d63d260c369938f6ecc0c45ae3a2324d9b015664c2d11ec45d6b0f73e70c8725be14160d8339be0e38c0e9841b39edae10034dff2bccd78f5fe5fa4a9d8ad1a402a5b1a0a21a3195cf7a8b386eb4c54449381c45ee505d2f38dc6ac11fb832bf242b5a329a478e9f945e294f9609c868e1168707e4fc5ab5d03"
n = 133095870112005146092382972901213883452759108789540790614042017618450631753415472749677277612512646010842240282301823025359098848400672660595257702729487331835699317726469726176764841055707221749866877945117579551600626818617712498459246588454571986800628812690342530906065404677395718075032563645494218217109
e = 65537
s = 1345927315295711353860005148837052503450884346640365927256876088648388782530190101512568553600529508565138546919416498878232374682972123815852651928389528485256966101168561262585191225184043928367739922633126877158874575770441291439853810910245293570871006718060830004546121746507491816130801523626248142985859145651122137297774659937031034547145840393887844439600962292925424901865106522213639199385125557217380356761469427393436531989512137516812067587435292772

# s = p*(n-p-q+1) => s = p*(p-1)*(q-1)
#q = n/p => s = p*(p-1)*(n/p - 1)
#s = (p-1)*(n-p)
# p**2 - (n+1)*p + (n+s) = 0

#SOLVING THIS EQUATION
det = (n+1)**2 -(4*(n+s))
d = (isqrt(det))
p1 = ((n+1)+d)//2
p2 = ((n+1)-d)//2

for i in (p1,p2):
    q = n//i
    if n == i*q:
        p = i

assert n==p*q
ct = (int(ct,16))

phi = (p-1)*(q-1)

d = pow(e,-1,phi)
pt = pow(ct,d,n)
print(long_to_bytes(pt).decode())